/**
 * jans-config-api
 * jans-config-api - Authorization services
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xxx@gluu.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthenticationProtectionConfiguration model module.
 * @module model/AuthenticationProtectionConfiguration
 * @version 1.0.0
 */
class AuthenticationProtectionConfiguration {
    /**
     * Constructs a new <code>AuthenticationProtectionConfiguration</code>.
     * Authentication Brute Force Protection Configuration.
     * @alias module:model/AuthenticationProtectionConfiguration
     */
    constructor() { 
        
        AuthenticationProtectionConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthenticationProtectionConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthenticationProtectionConfiguration} obj Optional instance to populate.
     * @return {module:model/AuthenticationProtectionConfiguration} The populated <code>AuthenticationProtectionConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthenticationProtectionConfiguration();

            if (data.hasOwnProperty('attemptExpiration')) {
                obj['attemptExpiration'] = ApiClient.convertToType(data['attemptExpiration'], 'Number');
            }
            if (data.hasOwnProperty('maximumAllowedAttemptsWithoutDelay')) {
                obj['maximumAllowedAttemptsWithoutDelay'] = ApiClient.convertToType(data['maximumAllowedAttemptsWithoutDelay'], 'Number');
            }
            if (data.hasOwnProperty('delayTime')) {
                obj['delayTime'] = ApiClient.convertToType(data['delayTime'], 'Number');
            }
            if (data.hasOwnProperty('bruteForceProtectionEnabled')) {
                obj['bruteForceProtectionEnabled'] = ApiClient.convertToType(data['bruteForceProtectionEnabled'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * How long store in cache information about particular login attempt. It's needed to count login attempts withing specified period of time.
 * @member {Number} attemptExpiration
 */
AuthenticationProtectionConfiguration.prototype['attemptExpiration'] = undefined;

/**
 * How many attempts application allow without delay.
 * @member {Number} maximumAllowedAttemptsWithoutDelay
 */
AuthenticationProtectionConfiguration.prototype['maximumAllowedAttemptsWithoutDelay'] = undefined;

/**
 * Delay time in seconds after reaching maximumAllowedAttemptsWithoutDelay limit.
 * @member {Number} delayTime
 */
AuthenticationProtectionConfiguration.prototype['delayTime'] = undefined;

/**
 * Enable or disable service, This functionality can be enabled dynamically.
 * @member {Boolean} bruteForceProtectionEnabled
 */
AuthenticationProtectionConfiguration.prototype['bruteForceProtectionEnabled'] = undefined;






export default AuthenticationProtectionConfiguration;

