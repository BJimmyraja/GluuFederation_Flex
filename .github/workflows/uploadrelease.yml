name: upload-release
# This builds, packages and releases pygluu-kubernetes
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
            # pygluu kubernetes
          - os: ubuntu-latest
            artifact_name: pygluu-kubernetes.pyz
            asset_name: pygluu-kubernetes-linux-amd64.pyz
            asset_directory: flex-cn-setup
            python_version: 3.8
            # flex linux setup
          - os: ubuntu-latest
            artifact_name: flex-linux-setup.pyz
            asset_name: flex-linux-setup-ubuntu-amd64.pyz
            asset_directory: flex-linux-setup
            python_version: 3.8
            # flex linux setup on CentOS8
          - os: ubuntu-latest
            artifact_name: flex-linux-setup.pyz
            asset_name: flex-linux-setup-centos8-amd64.pyz
            asset_directory: flex-linux-setup
            python_version: 3.8
            # helm chart
          - os: ubuntu-latest
            artifact_name: helm # Will be changed automatically
            asset_name: helm # Will be changed automatically
            asset_directory: flex-cn-setup/pygluu/kubernetes/templates/helm/gluu
            python_version: 3.8

    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Set up Python 3.8
      uses: actions/setup-python@v3.0.0
      with:
        python-version: 3.8
    - name: Map outputs
      id: output
      run: |
        echo ::set-output name=artifact_name::${{ matrix.artifact_name }}
        echo ::set-output name=asset_name::${{ matrix.asset_name }}
        ASSET_NAME=$(ls | grep ".tgz" | sort -rn | head -1)
        if [[ "${{ matrix.asset_directory }}" == "flex-cn-setup/pygluu/kubernetes/templates/helm/gluu" ]]; then
          echo ::set-output name=artifact_name::${ASSET_NAME}
          echo ::set-output name=asset_name::${ASSET_NAME}     
        fi
        echo "::set-output name=tag::$(curl https://api.github.com/repos/${{ github.repository }}/releases -s | grep "tag_name" | cut -d '"' -f 4 | grep -o '^\v.*' | head -n 1)"

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install jq

    - name: Lint with flake8
      run: |
        pip3 install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Checkout code
      uses: actions/checkout@master

    - name: Build Zipapp
      if: matrix.asset_name != 'flex-linux-setup-centos8-amd64.pyz'
      run: |
        sudo apt-get update || brew install jq
        sudo apt-get install build-essential || echo "Maybe im on macos OS"
        pip3 install shiv
        cd ${{ matrix.asset_directory }}
        if [[ "${{ matrix.asset_directory }}" == "flex-cn-setup/pygluu/kubernetes/templates/helm/gluu" ]]; then
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          helm package .
          sha256sum ${{ steps.output.outputs.artifact_name }} > ${{ steps.output.outputs.artifact_name }}.sha256sum
        else
          make zipapp
          sha256sum ${{ steps.output.outputs.artifact_name }} > ${{ steps.output.outputs.artifact_name }}.sha256sum
        fi

    - uses: addnab/docker-run-action@v3
      if: matrix.asset_name == 'flex-linux-setup-centos8-amd64.pyz'
      name: Build with CentOS8
      continue-on-error: true
      with:
        image: centos:centos8
        options: -v ${{ github.workspace }}:/centos
        run: |
          yum install python36u python36u-devel python36u-pip -y
          yum install gcc openssl-devel bzip2-devel libffi-devel zlib-devel -y
          curl https://www.python.org/ftp/python/3.6.15/Python-3.6.15.tgz --output Python-3.6.15.tgz
          tar xzf Python-3.6.15.tgz
          cd Python-3.6.15
          ./configure --enable-optimizations
          yum install make -y
          make altinstall
          yum -y install epel-release
          curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
          python3.7 get-pip.py
          echo "Building flex-linux-setup package"
          cd /centos/flex-linux-setup
          pip install shiv
          make zipapp
          sha256sum ${{ steps.output.outputs.artifact_name }} > ${{ steps.output.outputs.artifact_name }}.sha256sum

    - name: Get latest tag
      id: previoustag
      run: |
        echo "::set-output name=tag::$(curl https://api.github.com/repos/${{ github.repository }}/releases -s | grep "tag_name" | cut -d '"' -f 4 | grep -o '^\v.*' | head -n 1)"

    - name: Print Version
      run: |
        echo "${{ steps.previoustag.outputs.tag }}"


    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.MOWORKFLOWTOKEN }}
        file: ${{github.workspace}}/${{ matrix.asset_directory }}/${{ steps.output.outputs.artifact_name }}
        asset_name: ${{ steps.output.outputs.asset_name }}
        tag: ${{ steps.previoustag.outputs.tag }}

    - name: Upload shas to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.MOWORKFLOWTOKEN }}
        file: ${{github.workspace}}/${{ matrix.asset_directory }}/${{ steps.output.outputs.artifact_name }}.sha256sum
        asset_name: ${{ steps.output.outputs.asset_name }}.sha256sum
        tag: ${{ steps.previoustag.outputs.tag }}