/**
 * jans-config-api
 * jans-config-api - Authorization services
 *
 * The version of the OpenAPI document: 1.0
 * Contact: xxx@gluu.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InlineResponse2009 from '../model/InlineResponse2009';
import PatchRequest from '../model/PatchRequest';
import UNKNOWN_BASE_TYPE from '../model/UNKNOWN_BASE_TYPE';

/**
* OAuthUMAResources service.
* @module api/OAuthUMAResourcesApi
* @version 1.0
*/
export default class OAuthUMAResourcesApi {

    /**
    * Constructs a new OAuthUMAResourcesApi. 
    * @alias module:api/OAuthUMAResourcesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteOauthUmaResourcesById operation.
     * @callback module:api/OAuthUMAResourcesApi~deleteOauthUmaResourcesByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an UMA resource.
     * Deletes an UMA resource.
     * @param {String} id Resource description ID.
     * @param {module:api/OAuthUMAResourcesApi~deleteOauthUmaResourcesByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOauthUmaResourcesById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteOauthUmaResourcesById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/uma/resources/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOauthUmaResources operation.
     * @callback module:api/OAuthUMAResourcesApi~getOauthUmaResourcesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse2009>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets list of UMA resources.
     * Gets list of UMA resources.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Search size - max size of the results to return. (default to 50)
     * @param {String} opts.pattern Search pattern.
     * @param {module:api/OAuthUMAResourcesApi~getOauthUmaResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse2009>}
     */
    getOauthUmaResources(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'pattern': opts['pattern']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [InlineResponse2009];
      return this.apiClient.callApi(
        '/api/v1/uma/resources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOauthUmaResourcesById operation.
     * @callback module:api/OAuthUMAResourcesApi~getOauthUmaResourcesByIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an UMA resource by ID.
     * Gets an UMA resource by ID.
     * @param {String} id Resource description ID.
     * @param {module:api/OAuthUMAResourcesApi~getOauthUmaResourcesByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getOauthUmaResourcesById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOauthUmaResourcesById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/uma/resources/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchOauthUmaResourcesById operation.
     * @callback module:api/OAuthUMAResourcesApi~patchOauthUmaResourcesByIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partially updates an UMA resource by Inum.
     * Partially updates an UMA resource by Inum.
     * @param {String} id Resource description ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/PatchRequest} opts.patchRequest 
     * @param {module:api/OAuthUMAResourcesApi~patchOauthUmaResourcesByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    patchOauthUmaResourcesById(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['patchRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling patchOauthUmaResourcesById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/uma/resources/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postOauthUmaResources operation.
     * @callback module:api/OAuthUMAResourcesApi~postOauthUmaResourcesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an UMA resource.
     * Creates an UMA resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/UNKNOWN_BASE_TYPE} opts.UNKNOWN_BASE_TYPE 
     * @param {module:api/OAuthUMAResourcesApi~postOauthUmaResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    postOauthUmaResources(opts, callback) {
      opts = opts || {};
      let postBody = opts['UNKNOWN_BASE_TYPE'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/uma/resources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putOauthUmaResources operation.
     * @callback module:api/OAuthUMAResourcesApi~putOauthUmaResourcesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an UMA resource.
     * Updates an UMA resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/UNKNOWN_BASE_TYPE} opts.UNKNOWN_BASE_TYPE 
     * @param {module:api/OAuthUMAResourcesApi~putOauthUmaResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    putOauthUmaResources(opts, callback) {
      opts = opts || {};
      let postBody = opts['UNKNOWN_BASE_TYPE'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/uma/resources', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
