/**
 * jans-config-api
 * jans-config-api - Authorization services
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xxx@gluu.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InlineObject6 from '../model/InlineObject6';
import InlineObject7 from '../model/InlineObject7';
import InlineResponse2008 from '../model/InlineResponse2008';
import NewlyAddedOpenIDConnectSectorIdentifier from '../model/NewlyAddedOpenIDConnectSectorIdentifier';
import PatchRequest from '../model/PatchRequest';

/**
* OAuthOpenIDConnectSectorIdentifiers service.
* @module api/OAuthOpenIDConnectSectorIdentifiersApi
* @version 1.0.0
*/
export default class OAuthOpenIDConnectSectorIdentifiersApi {

    /**
    * Constructs a new OAuthOpenIDConnectSectorIdentifiersApi. 
    * @alias module:api/OAuthOpenIDConnectSectorIdentifiersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteOauthOpenidSectorsById operation.
     * @callback module:api/OAuthOpenIDConnectSectorIdentifiersApi~deleteOauthOpenidSectorsByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete OpenID Connect Sector.
     * Delete OpenID Connect Sector.
     * @param {String} inum Scope ID.
     * @param {module:api/OAuthOpenIDConnectSectorIdentifiersApi~deleteOauthOpenidSectorsByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOauthOpenidSectorsById(inum, callback) {
      let postBody = null;
      // verify the required parameter 'inum' is set
      if (inum === undefined || inum === null) {
        throw new Error("Missing the required parameter 'inum' when calling deleteOauthOpenidSectorsById");
      }

      let pathParams = {
        'inum': inum
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jans-config-api/api/v1/openid/sectoridentifiers/{inum}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOauthOpenidSectors operation.
     * @callback module:api/OAuthOpenIDConnectSectorIdentifiersApi~getOauthOpenidSectorsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse2008>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets list of OpenID Connect Sectors.
     * Gets list of OpenID Connect Sectors.
     * @param {module:api/OAuthOpenIDConnectSectorIdentifiersApi~getOauthOpenidSectorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse2008>}
     */
    getOauthOpenidSectors(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [InlineResponse2008];
      return this.apiClient.callApi(
        '/jans-config-api/api/v1/openid/sectoridentifiers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOauthOpenidSectorsById operation.
     * @callback module:api/OAuthOpenIDConnectSectorIdentifiersApi~getOauthOpenidSectorsByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get OpenID Connect Sector by Inum.
     * Get OpenID Connect Sector by Inum.
     * @param {String} inum Scope ID.
     * @param {module:api/OAuthOpenIDConnectSectorIdentifiersApi~getOauthOpenidSectorsByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    getOauthOpenidSectorsById(inum, callback) {
      let postBody = null;
      // verify the required parameter 'inum' is set
      if (inum === undefined || inum === null) {
        throw new Error("Missing the required parameter 'inum' when calling getOauthOpenidSectorsById");
      }

      let pathParams = {
        'inum': inum
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2008;
      return this.apiClient.callApi(
        '/jans-config-api/api/v1/openid/sectoridentifiers/{inum}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchOauthOpenidSectorsById operation.
     * @callback module:api/OAuthOpenIDConnectSectorIdentifiersApi~patchOauthOpenidSectorsByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partially update OpenId Connect Sector by Inum.
     * Partially update OpenId Connect Sector by Inum.
     * @param {String} inum Scope ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/PatchRequest} opts.patchRequest 
     * @param {module:api/OAuthOpenIDConnectSectorIdentifiersApi~patchOauthOpenidSectorsByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    patchOauthOpenidSectorsById(inum, opts, callback) {
      opts = opts || {};
      let postBody = opts['patchRequest'];
      // verify the required parameter 'inum' is set
      if (inum === undefined || inum === null) {
        throw new Error("Missing the required parameter 'inum' when calling patchOauthOpenidSectorsById");
      }

      let pathParams = {
        'inum': inum
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2008;
      return this.apiClient.callApi(
        '/jans-config-api/api/v1/openid/sectoridentifiers/{inum}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postOauthOpenidSectors operation.
     * @callback module:api/OAuthOpenIDConnectSectorIdentifiersApi~postOauthOpenidSectorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NewlyAddedOpenIDConnectSectorIdentifier} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new OpenID Connect Sector.
     * Create new OpenID Connect Sector.
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject7} opts.inlineObject7 
     * @param {module:api/OAuthOpenIDConnectSectorIdentifiersApi~postOauthOpenidSectorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NewlyAddedOpenIDConnectSectorIdentifier}
     */
    postOauthOpenidSectors(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject7'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NewlyAddedOpenIDConnectSectorIdentifier;
      return this.apiClient.callApi(
        '/jans-config-api/api/v1/openid/sectoridentifiers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putOauthOpenidSectors operation.
     * @callback module:api/OAuthOpenIDConnectSectorIdentifiersApi~putOauthOpenidSectorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NewlyAddedOpenIDConnectSectorIdentifier} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update OpenId Connect Sector.
     * Update OpenId Connect Sector.
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject6} opts.inlineObject6 
     * @param {module:api/OAuthOpenIDConnectSectorIdentifiersApi~putOauthOpenidSectorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NewlyAddedOpenIDConnectSectorIdentifier}
     */
    putOauthOpenidSectors(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject6'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jans-auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NewlyAddedOpenIDConnectSectorIdentifier;
      return this.apiClient.callApi(
        '/jans-config-api/api/v1/openid/sectoridentifiers', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
