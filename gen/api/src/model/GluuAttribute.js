/**
 * jans-config-api
 * jans-config-api - Authorization services
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xxx@gluu.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GluuAttributeAttributeValidation from './GluuAttributeAttributeValidation';

/**
 * The GluuAttribute model module.
 * @module model/GluuAttribute
 * @version 1.0.0
 */
class GluuAttribute {
    /**
     * Constructs a new <code>GluuAttribute</code>.
     * Attribute.
     * @alias module:model/GluuAttribute
     * @param name {String} Name of the attribute.
     * @param displayName {Array.<String>} 
     * @param dataType {module:model/GluuAttribute.DataTypeEnum} Data Type of attribute.
     * @param status {String} Distinguished Name
     */
    constructor(name, displayName, dataType, status) { 
        
        GluuAttribute.initialize(this, name, displayName, dataType, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, displayName, dataType, status) { 
        obj['name'] = name;
        obj['displayName'] = displayName;
        obj['dataType'] = dataType;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>GluuAttribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GluuAttribute} obj Optional instance to populate.
     * @return {module:model/GluuAttribute} The populated <code>GluuAttribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GluuAttribute();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dataType')) {
                obj['dataType'] = ApiClient.convertToType(data['dataType'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('jansMultivaluedAttr')) {
                obj['jansMultivaluedAttr'] = ApiClient.convertToType(data['jansMultivaluedAttr'], 'Boolean');
            }
            if (data.hasOwnProperty('lifetime')) {
                obj['lifetime'] = ApiClient.convertToType(data['lifetime'], 'String');
            }
            if (data.hasOwnProperty('sourceAttribute')) {
                obj['sourceAttribute'] = ApiClient.convertToType(data['sourceAttribute'], 'String');
            }
            if (data.hasOwnProperty('salt')) {
                obj['salt'] = ApiClient.convertToType(data['salt'], 'String');
            }
            if (data.hasOwnProperty('nameIdType')) {
                obj['nameIdType'] = ApiClient.convertToType(data['nameIdType'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('editType')) {
                obj['editType'] = ApiClient.convertToType(data['editType'], ['String']);
            }
            if (data.hasOwnProperty('viewType')) {
                obj['viewType'] = ApiClient.convertToType(data['viewType'], ['String']);
            }
            if (data.hasOwnProperty('usageType')) {
                obj['usageType'] = ApiClient.convertToType(data['usageType'], ['String']);
            }
            if (data.hasOwnProperty('jansAttrName')) {
                obj['jansAttrName'] = ApiClient.convertToType(data['jansAttrName'], 'String');
            }
            if (data.hasOwnProperty('seeAlso')) {
                obj['seeAlso'] = ApiClient.convertToType(data['seeAlso'], 'String');
            }
            if (data.hasOwnProperty('saml1Uri')) {
                obj['saml1Uri'] = ApiClient.convertToType(data['saml1Uri'], 'String');
            }
            if (data.hasOwnProperty('saml2Uri')) {
                obj['saml2Uri'] = ApiClient.convertToType(data['saml2Uri'], 'String');
            }
            if (data.hasOwnProperty('urn')) {
                obj['urn'] = ApiClient.convertToType(data['urn'], 'String');
            }
            if (data.hasOwnProperty('jansSCIMCustomAttr')) {
                obj['jansSCIMCustomAttr'] = ApiClient.convertToType(data['jansSCIMCustomAttr'], 'Boolean');
            }
            if (data.hasOwnProperty('custom')) {
                obj['custom'] = ApiClient.convertToType(data['custom'], 'Boolean');
            }
            if (data.hasOwnProperty('requred')) {
                obj['requred'] = ApiClient.convertToType(data['requred'], 'Boolean');
            }
            if (data.hasOwnProperty('attributeValidation')) {
                obj['attributeValidation'] = GluuAttributeAttributeValidation.constructFromObject(data['attributeValidation']);
            }
            if (data.hasOwnProperty('gluuTooltip')) {
                obj['gluuTooltip'] = ApiClient.convertToType(data['gluuTooltip'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name of the attribute.
 * @member {String} name
 */
GluuAttribute.prototype['name'] = undefined;

/**
 * @member {Array.<String>} displayName
 */
GluuAttribute.prototype['displayName'] = undefined;

/**
 * User friendly descriptive detail of attribute.
 * @member {String} description
 */
GluuAttribute.prototype['description'] = undefined;

/**
 * Data Type of attribute.
 * @member {module:model/GluuAttribute.DataTypeEnum} dataType
 */
GluuAttribute.prototype['dataType'] = undefined;

/**
 * Distinguished Name
 * @member {String} status
 */
GluuAttribute.prototype['status'] = undefined;

/**
 * Boolean value indicating if the attribute is multi-value
 * @member {Boolean} jansMultivaluedAttr
 */
GluuAttribute.prototype['jansMultivaluedAttr'] = undefined;

/**
 * @member {String} lifetime
 */
GluuAttribute.prototype['lifetime'] = undefined;

/**
 * @member {String} sourceAttribute
 */
GluuAttribute.prototype['sourceAttribute'] = undefined;

/**
 * @member {String} salt
 */
GluuAttribute.prototype['salt'] = undefined;

/**
 * @member {String} nameIdType
 */
GluuAttribute.prototype['nameIdType'] = undefined;

/**
 * @member {String} origin
 */
GluuAttribute.prototype['origin'] = undefined;

/**
 * GluuUserRole
 * @member {Array.<String>} editType
 */
GluuAttribute.prototype['editType'] = undefined;

/**
 * GluuUserRole
 * @member {Array.<String>} viewType
 */
GluuAttribute.prototype['viewType'] = undefined;

/**
 * GluuAttributeUsageType
 * @member {Array.<String>} usageType
 */
GluuAttribute.prototype['usageType'] = undefined;

/**
 * @member {String} jansAttrName
 */
GluuAttribute.prototype['jansAttrName'] = undefined;

/**
 * @member {String} seeAlso
 */
GluuAttribute.prototype['seeAlso'] = undefined;

/**
 * @member {String} saml1Uri
 */
GluuAttribute.prototype['saml1Uri'] = undefined;

/**
 * @member {String} saml2Uri
 */
GluuAttribute.prototype['saml2Uri'] = undefined;

/**
 * @member {String} urn
 */
GluuAttribute.prototype['urn'] = undefined;

/**
 * Boolean value indicating if the attribute is a SCIM custom attribute
 * @member {Boolean} jansSCIMCustomAttr
 */
GluuAttribute.prototype['jansSCIMCustomAttr'] = undefined;

/**
 * Boolean value indicating if the attribute is a custom attribute
 * @member {Boolean} custom
 */
GluuAttribute.prototype['custom'] = undefined;

/**
 * Boolean value indicating is a mandatory attribute
 * @member {Boolean} requred
 */
GluuAttribute.prototype['requred'] = undefined;

/**
 * @member {module:model/GluuAttributeAttributeValidation} attributeValidation
 */
GluuAttribute.prototype['attributeValidation'] = undefined;

/**
 * @member {String} gluuTooltip
 */
GluuAttribute.prototype['gluuTooltip'] = undefined;





/**
 * Allowed values for the <code>dataType</code> property.
 * @enum {String}
 * @readonly
 */
GluuAttribute['DataTypeEnum'] = {

    /**
     * value: "STRING"
     * @const
     */
    "STRING": "STRING",

    /**
     * value: "NUMERIC"
     * @const
     */
    "NUMERIC": "NUMERIC",

    /**
     * value: "BOOLEAN"
     * @const
     */
    "BOOLEAN": "BOOLEAN",

    /**
     * value: "BINARY"
     * @const
     */
    "BINARY": "BINARY",

    /**
     * value: "DATE"
     * @const
     */
    "DATE": "DATE"
};



export default GluuAttribute;

