/**
 * jans-config-api
 * jans-config-api - Authorization services
 *
 * The version of the OpenAPI document: 1.0
 * Contact: xxx@gluu.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2005 model module.
 * @module model/InlineResponse2005
 * @version 1.0
 */
class InlineResponse2005 {
    /**
     * Constructs a new <code>InlineResponse2005</code>.
     * Log configuration.
     * @alias module:model/InlineResponse2005
     */
    constructor() { 
        
        InlineResponse2005.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2005</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2005} obj Optional instance to populate.
     * @return {module:model/InlineResponse2005} The populated <code>InlineResponse2005</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2005();

            if (data.hasOwnProperty('loggingLevel')) {
                obj['loggingLevel'] = ApiClient.convertToType(data['loggingLevel'], 'String');
            }
            if (data.hasOwnProperty('loggingLayout')) {
                obj['loggingLayout'] = ApiClient.convertToType(data['loggingLayout'], 'String');
            }
            if (data.hasOwnProperty('httpLoggingEnabled')) {
                obj['httpLoggingEnabled'] = ApiClient.convertToType(data['httpLoggingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('disableJdkLogger')) {
                obj['disableJdkLogger'] = ApiClient.convertToType(data['disableJdkLogger'], 'Boolean');
            }
            if (data.hasOwnProperty('enabledOAuthAuditLogging')) {
                obj['enabledOAuthAuditLogging'] = ApiClient.convertToType(data['enabledOAuthAuditLogging'], 'Boolean');
            }
            if (data.hasOwnProperty('externalLoggerConfiguration')) {
                obj['externalLoggerConfiguration'] = ApiClient.convertToType(data['externalLoggerConfiguration'], 'String');
            }
            if (data.hasOwnProperty('httpLoggingExludePaths')) {
                obj['httpLoggingExludePaths'] = ApiClient.convertToType(data['httpLoggingExludePaths'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Logging level for Jans Authorization Server logger.
 * @member {module:model/InlineResponse2005.LoggingLevelEnum} loggingLevel
 */
InlineResponse2005.prototype['loggingLevel'] = undefined;

/**
 * Logging layout used for Jans Authorization Server loggers.
 * @member {module:model/InlineResponse2005.LoggingLayoutEnum} loggingLayout
 */
InlineResponse2005.prototype['loggingLayout'] = undefined;

/**
 * To enable http request/response logging.
 * @member {Boolean} httpLoggingEnabled
 */
InlineResponse2005.prototype['httpLoggingEnabled'] = undefined;

/**
 * To enable/disable Jdk logging.
 * @member {Boolean} disableJdkLogger
 */
InlineResponse2005.prototype['disableJdkLogger'] = undefined;

/**
 * To enable/disable OAuth audit logging.
 * @member {Boolean} enabledOAuthAuditLogging
 */
InlineResponse2005.prototype['enabledOAuthAuditLogging'] = undefined;

/**
 * Path to external log4j2 configuration file.
 * @member {String} externalLoggerConfiguration
 */
InlineResponse2005.prototype['externalLoggerConfiguration'] = undefined;

/**
 * List of paths to exclude from logger.
 * @member {Array.<String>} httpLoggingExludePaths
 */
InlineResponse2005.prototype['httpLoggingExludePaths'] = undefined;





/**
 * Allowed values for the <code>loggingLevel</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005['LoggingLevelEnum'] = {

    /**
     * value: "TRACE"
     * @const
     */
    "TRACE": "TRACE",

    /**
     * value: "DEBUG"
     * @const
     */
    "DEBUG": "DEBUG",

    /**
     * value: "INFO"
     * @const
     */
    "INFO": "INFO",

    /**
     * value: "WARN"
     * @const
     */
    "WARN": "WARN",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "FATAL"
     * @const
     */
    "FATAL": "FATAL",

    /**
     * value: "OFF"
     * @const
     */
    "OFF": "OFF"
};


/**
 * Allowed values for the <code>loggingLayout</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005['LoggingLayoutEnum'] = {

    /**
     * value: "text"
     * @const
     */
    "text": "text",

    /**
     * value: "json"
     * @const
     */
    "json": "json"
};



export default InlineResponse2005;

