{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Gluu Flex Documentation # Introduction # The Gluu Server is a container distribution of free open source software (FOSS) for identity and access management (IAM). SaaS, custom, open source and commercial web and mobile applications can leverage a Gluu Server for user authentication, identity information, and policy decisions. Common use cases include: Single sign-on (SSO) Mobile authentication API access management Two-factor authentication (2FA) Customer identity and access management (CIAM) Identity federation Open Web Standards # The Gluu Server can be deployed to support the following open standards for authentication, authorization, federated identity, and identity management: OAuth 2.0 OpenID Connect User Managed Access 2.0 (UMA) SAML 2.0 System for Cross-domain Identity Management (SCIM) FIDO Universal 2nd Factor (U2F) FIDO 2.0 / WebAuthn Lightweight Directory Access Protocol (LDAP) Remote Authentication Dial-In User Service (RADIUS) Support # The Gluu Flex contract includes guaranteed response times and consultative support via our support portal . Contribute # We want to keep improving our docs. Please help us improve by submitting any improvements to our [Github](https://github.com/GluuFederation/flex/docs. If you're a Github pro, submit a pull request. If not, just open an issue on any typos, bugs, or improvements you'd like to see addressed. We need your help... even if you're not a coder, you can contribute! License #","title":"Overview"},{"location":"#gluu-flex-documentation","text":"","title":"Gluu Flex Documentation"},{"location":"#introduction","text":"The Gluu Server is a container distribution of free open source software (FOSS) for identity and access management (IAM). SaaS, custom, open source and commercial web and mobile applications can leverage a Gluu Server for user authentication, identity information, and policy decisions. Common use cases include: Single sign-on (SSO) Mobile authentication API access management Two-factor authentication (2FA) Customer identity and access management (CIAM) Identity federation","title":"Introduction"},{"location":"#open-web-standards","text":"The Gluu Server can be deployed to support the following open standards for authentication, authorization, federated identity, and identity management: OAuth 2.0 OpenID Connect User Managed Access 2.0 (UMA) SAML 2.0 System for Cross-domain Identity Management (SCIM) FIDO Universal 2nd Factor (U2F) FIDO 2.0 / WebAuthn Lightweight Directory Access Protocol (LDAP) Remote Authentication Dial-In User Service (RADIUS)","title":"Open Web Standards"},{"location":"#support","text":"The Gluu Flex contract includes guaranteed response times and consultative support via our support portal .","title":"Support"},{"location":"#contribute","text":"We want to keep improving our docs. Please help us improve by submitting any improvements to our [Github](https://github.com/GluuFederation/flex/docs. If you're a Github pro, submit a pull request. If not, just open an issue on any typos, bugs, or improvements you'd like to see addressed. We need your help... even if you're not a coder, you can contribute!","title":"Contribute"},{"location":"#license","text":"","title":"License"},{"location":"CHANGELOG/","text":"Changelog # 5.0.0-4 (2022-12-08) # Bug Fixes # getting ready for a release ( a0de091 ) 5.0.0-3 (2022-11-08) # Features # admin-ui: reviewed previously updated dependencies #416 ( ab81760 ) Bug Fixes # getting ready to release 5.0.0-3 ( e8f3ecc ) Miscellaneous Chores # release 5.0.0-2 ( 06c6e64 )","title":"Changelog"},{"location":"CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"CHANGELOG/#500-4-2022-12-08","text":"","title":"5.0.0-4 (2022-12-08)"},{"location":"CHANGELOG/#bug-fixes","text":"getting ready for a release ( a0de091 )","title":"Bug Fixes"},{"location":"CHANGELOG/#500-3-2022-11-08","text":"","title":"5.0.0-3 (2022-11-08)"},{"location":"CHANGELOG/#features","text":"admin-ui: reviewed previously updated dependencies #416 ( ab81760 )","title":"Features"},{"location":"CHANGELOG/#bug-fixes_1","text":"getting ready to release 5.0.0-3 ( e8f3ecc )","title":"Bug Fixes"},{"location":"CHANGELOG/#miscellaneous-chores","text":"release 5.0.0-2 ( 06c6e64 )","title":"Miscellaneous Chores"},{"location":"admin-ui/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Index"},{"location":"admin-ui/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"admin-ui/properties/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Admin UI Properties"},{"location":"admin-ui/properties/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"casa/","text":"Gluu Casa # Overview # Gluu Casa (\"Casa\") is a self-service web portal for end-users to manage authentication and authorization preferences for their account in Gluu Flex. For example, as people interact with an organization's digital services, they may need to: Enroll, delete and manage two-factor authentication (2FA) credentials for their account (e.g. FIDO security keys, mobile apps, phone numbers, etc.) Turn 2FA on and off View and manage which external apps have been authorized to access what personal data View trusted devices Casa provides a platform for people to perform these account security functions and more. Documentation # Gluu Flex incorporates the latest version of Gluu Casa .","title":"Casa"},{"location":"casa/#gluu-casa","text":"","title":"Gluu Casa"},{"location":"casa/#overview","text":"Gluu Casa (\"Casa\") is a self-service web portal for end-users to manage authentication and authorization preferences for their account in Gluu Flex. For example, as people interact with an organization's digital services, they may need to: Enroll, delete and manage two-factor authentication (2FA) credentials for their account (e.g. FIDO security keys, mobile apps, phone numbers, etc.) Turn 2FA on and off View and manage which external apps have been authorized to access what personal data View trusted devices Casa provides a platform for people to perform these account security functions and more.","title":"Overview"},{"location":"casa/#documentation","text":"Gluu Flex incorporates the latest version of Gluu Casa .","title":"Documentation"},{"location":"casa/template/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Template"},{"location":"casa/template/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Index"},{"location":"install/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/helm-install/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Index"},{"location":"install/helm-install/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/helm-install/amazon-eks/","text":"Gluu Flex EKS , Amazon Secret manager and Aurora Production tutorial setup # Cloud Native Distribution # Getting Started with Kubernetes # System Requirements for cloud deployments # Please calculate the minimum required resources as per services deployed. The following table contains default recommended resources to start with. Depending on the use of each service, the resources may be increased or decreased. Service CPU Unit RAM Disk Space Processor Type Required Auth server 2.5 2.5GB N/A 64 Bit Yes LDAP (OpenDJ) 1.5 2GB 10GB 64 Bit Only if couchbase is not installed fido2 0.5 0.5GB N/A 64 Bit No scim 1.0 1.0GB N/A 64 Bit No config - job 0.5 0.5GB N/A 64 Bit Yes on fresh installs persistence - job 0.5 0.5GB N/A 64 Bit Yes on fresh installs client-api 1 0.4GB N/A 64 Bit No nginx 1 1GB N/A 64 Bit Yes if not ALB auth-key-rotation 0.3 0.3GB N/A 64 Bit No [Strongly recommended] config-api 0.5 0.5GB N/A 64 Bit No admin-ui 1.0 1.0GB N/A 64 Bit No casa 1.0 1.0GB N/A 64 Bit No Configure EKS with Aurora # Amazon Web Services (AWS) - EKS # Setup Cluster # Follow this guide to install a cluster with worker nodes. This setup must use three t2.xlarge instances distributed in three different zones. Please make sure that you have all the IAM policies for the AWS user that will be creating the cluster and volumes. Requirements # The above guide should also walk you through installing kubectl , aws-iam-authenticator and aws cli on the VM you will be managing your cluster and nodes from. Check to make sure. aws-iam-authenticator help aws-cli kubectl version Amazon Aurora # Amazon Aurora is a MySQL and PostgreSQL-compatible relational database built for the cloud, that combines the performance and availability of traditional enterprise databases with the simplicity and cost-effectiveness of open source databases. Gluu fully supports Amazon Aurora, and recommends it in production. Copy the below into a file named override-values.yaml . We will be referencing this file throughout this tutorial. config : countryCode : US email : support@gluu.org orgName : Gluu city : Austin configmap : cnSqlDbName : gluu cnSqlDbPort : 3306 cnSqlDbDialect : mysql cnSqlDbHost : my-release-mysql.gluu.svc cnSqlDbUser : root cnSqlDbTimezone : UTC cnSqldbUserPassword : Test1234# configAdapterName : aws configSecretAdapter : aws cnAwsAccessKeyId : \"\" cnAwsSecretAccessKey : \"\" cnAwsSecretsEndpointUrl : \"\" cnAwsSecretsNamePrefix : gluu cnAwsDefaultRegion : us-west-1 cnAwsProfile : \"gluu\" cnAwsSecretsReplicaRegions : [] global : admin-ui : ingress : adminUiEnabled : true cnPersistenceType : sql fqdn : demoexample.gluu.org isFqdnRegistered : true scim : ingress : # -- Enable endpoint /.well-known/scim-configuration scimConfigEnabled : true nginx-ingress : ingress : path : / hosts : - demoexample.gluu.org tls : - secretName : tls-certificate hosts : - demoexample.gluu.org Create an Amazon Aurora database with MySQL compatibility version >= Aurora(8.x) 3.x and capacity type Serverless . Make sure the EKS cluster can reach the database endpoint. You may choose to use the same VPC as the EKS cluster. Save the master user, master password, and initial database name for use in Gluus helm chart. Inject the Aurora endpoint, master user, master password, and initial database name for use in Gluus helm chart override-values.yaml . Helm values configuration Description default config.configmap.cnSqlDbHost Aurora database endpoint i.e gluu.cluster-xxxxxxx.eu-central.rds.amazonaws.com empty config.configmap.cnSqlDbPort Aurora database port 3306 config.configmap.cnSqlDbName Aurora initial database name gluu config.configmap.cnSqlDbUser Aurora master user gluu config.configmap.cnSqldbUserPassword Aurora master password Test1234# Install Gluu using Helm # Install nginx-ingress Helm Chart . kubectl create ns <nginx-namespace> helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx helm repo update # The below `set` is needed currently as the admission webhook of nginx upon initial installation sometimes revokes the ingress definitions incorrectly. helm install <nginx-release-name> ingress-nginx/ingress-nginx --namespace = <nginx-namespace> --set controller.admissionWebhooks.enabled = false Create a namespace for gluu openbanking distribution: kubectl create ns gluu 3. Modify other values in the helm chart configuration to fit your setup | Helm values configuration | Description | default | ---------------------------------|---------------------------------------|--------------------------|-----------------------------| | config.city | City | Austin | | config.countryCode | Country | US | | config.email | Email | support@gluu.org | | config.orgName | Organization name | Gluu | | config.state | State | TX | | global.fqdn | FQDN | demoexample.gluu.org | | nginx-ingress.ingress.hosts | A list containing the FQDN | [demoexample.gluu.org] | | nginx-ingress.ingress.tls.hosts | A list containing the FQDN | [demoexample.gluu.org] | Modify the values in the helm chart to activate using AWS Secret Manager as the config and secret layer holder. Change global.configAdapterName and global.configSecretAdapter to aws . Change the below values appropriately: | Helm values configuration | Description | default | ---------------------------------|---------------------------------------|--------------------------|-----------------------------| | config.configmap.cnAwsAccessKeyId | AWS Access key id that belong to a user/id with SecretsManagerReadWrite policy | \"\" | | config.configmap.cnAwsSecretAccessKey | AWS Secret Access key that belong to a user/id with SecretsManagerReadWrite policy | \"\" | | config.configmap.cnAwsSecretsEndpointUrl | The URL of AWS secretsmanager service (if omitted, will use the one in specified region). Used only when global.configAdapterName and global.configSecretAdapter is set to aws. | \"\" | | config.configmap.cnAwsSecretsEndpointUrl | The URL of AWS secretsmanager service (if omitted, will use the one in specified region). Used only when global.configAdapterName and global.configSecretAdapter is set to aws. | \"\" | | config.configmap.cnAwsSecretsNamePrefix | The prefix name of the secrets. Used only when global.configAdapterName and global.configSecretAdapter is set to aws. | \"gluu\" | | config.configmap.cnAwsDefaultRegion | The default AWS Region to use, for example, us-west-1 or us-west-2 . | us-west-1 | | config.configmap.cnAwsProfile | The name of the default profile to use. | gluu | | config.configmap.cnAwsSecretsReplicaRegions | Example replicated region [{\"Region\": \"us-west-1\"}, {\"Region\": \"us-west-2\"}] | [] | 5. NOT REEQUIRED IF FQDN IS REGISTERED : Please note that the FQDN must be resolvable or the config-api will fail to find the host. You may choose to modify the CoreDNS to reroute the domain internally to the nginx-ingress as following: Add rewrite rule to CoreDNS ConfigMap . In the following example we will be using ingress-nginx which you have installed previously. The internal address of this service will be nginx-ingress-nginx-controller.nginx.svc.cluster.local which is in the following format <releasename>-ingress-nginx-controller.<namespace>.svc.cluster.local and our example domain will be demoexample.gluu.org : Take a copy of the ConfigMap : kubectl -n kube-system get configmap coredns -o yaml > original_coredns_cm.yaml cp original_coredns_cm.yaml gluu_modified_coredns_cm.yaml Edit the ConfigMap to include the rewrite using any edition: vi gluu_modified_coredns_cm.yaml .:53 { .... rewrite name demoexample.gluu.org nginx-ingress-nginx-controller.nginx.svc.cluster.local } Apply the changes: kubectl apply -f gluu_modified_coredns_cm.yaml Install gluu flex, refer here for the latest version details: helm repo add gluu https://docs.gluu.org/charts helm repo update helm install <release-name> gluu/gluu -n <namespace> -f override-values.yaml --version = 5 .0.10 Wait for your pods to be up and running , head to https://<fqdn>/admin place your license creds and login.","title":"Amazon EKS"},{"location":"install/helm-install/amazon-eks/#gluu-flex-eks-amazon-secret-manager-and-aurora-production-tutorial-setup","text":"","title":"Gluu Flex EKS , Amazon Secret manager and Aurora Production tutorial setup"},{"location":"install/helm-install/amazon-eks/#cloud-native-distribution","text":"","title":"Cloud Native Distribution"},{"location":"install/helm-install/amazon-eks/#getting-started-with-kubernetes","text":"","title":"Getting Started with Kubernetes"},{"location":"install/helm-install/amazon-eks/#system-requirements-for-cloud-deployments","text":"Please calculate the minimum required resources as per services deployed. The following table contains default recommended resources to start with. Depending on the use of each service, the resources may be increased or decreased. Service CPU Unit RAM Disk Space Processor Type Required Auth server 2.5 2.5GB N/A 64 Bit Yes LDAP (OpenDJ) 1.5 2GB 10GB 64 Bit Only if couchbase is not installed fido2 0.5 0.5GB N/A 64 Bit No scim 1.0 1.0GB N/A 64 Bit No config - job 0.5 0.5GB N/A 64 Bit Yes on fresh installs persistence - job 0.5 0.5GB N/A 64 Bit Yes on fresh installs client-api 1 0.4GB N/A 64 Bit No nginx 1 1GB N/A 64 Bit Yes if not ALB auth-key-rotation 0.3 0.3GB N/A 64 Bit No [Strongly recommended] config-api 0.5 0.5GB N/A 64 Bit No admin-ui 1.0 1.0GB N/A 64 Bit No casa 1.0 1.0GB N/A 64 Bit No","title":"System Requirements for cloud deployments"},{"location":"install/helm-install/amazon-eks/#configure-eks-with-aurora","text":"","title":"Configure EKS with Aurora"},{"location":"install/helm-install/amazon-eks/#amazon-web-services-aws-eks","text":"","title":"Amazon Web Services (AWS) - EKS"},{"location":"install/helm-install/amazon-eks/#setup-cluster","text":"Follow this guide to install a cluster with worker nodes. This setup must use three t2.xlarge instances distributed in three different zones. Please make sure that you have all the IAM policies for the AWS user that will be creating the cluster and volumes.","title":"Setup Cluster"},{"location":"install/helm-install/amazon-eks/#requirements","text":"The above guide should also walk you through installing kubectl , aws-iam-authenticator and aws cli on the VM you will be managing your cluster and nodes from. Check to make sure. aws-iam-authenticator help aws-cli kubectl version","title":"Requirements"},{"location":"install/helm-install/amazon-eks/#amazon-aurora","text":"Amazon Aurora is a MySQL and PostgreSQL-compatible relational database built for the cloud, that combines the performance and availability of traditional enterprise databases with the simplicity and cost-effectiveness of open source databases. Gluu fully supports Amazon Aurora, and recommends it in production. Copy the below into a file named override-values.yaml . We will be referencing this file throughout this tutorial. config : countryCode : US email : support@gluu.org orgName : Gluu city : Austin configmap : cnSqlDbName : gluu cnSqlDbPort : 3306 cnSqlDbDialect : mysql cnSqlDbHost : my-release-mysql.gluu.svc cnSqlDbUser : root cnSqlDbTimezone : UTC cnSqldbUserPassword : Test1234# configAdapterName : aws configSecretAdapter : aws cnAwsAccessKeyId : \"\" cnAwsSecretAccessKey : \"\" cnAwsSecretsEndpointUrl : \"\" cnAwsSecretsNamePrefix : gluu cnAwsDefaultRegion : us-west-1 cnAwsProfile : \"gluu\" cnAwsSecretsReplicaRegions : [] global : admin-ui : ingress : adminUiEnabled : true cnPersistenceType : sql fqdn : demoexample.gluu.org isFqdnRegistered : true scim : ingress : # -- Enable endpoint /.well-known/scim-configuration scimConfigEnabled : true nginx-ingress : ingress : path : / hosts : - demoexample.gluu.org tls : - secretName : tls-certificate hosts : - demoexample.gluu.org Create an Amazon Aurora database with MySQL compatibility version >= Aurora(8.x) 3.x and capacity type Serverless . Make sure the EKS cluster can reach the database endpoint. You may choose to use the same VPC as the EKS cluster. Save the master user, master password, and initial database name for use in Gluus helm chart. Inject the Aurora endpoint, master user, master password, and initial database name for use in Gluus helm chart override-values.yaml . Helm values configuration Description default config.configmap.cnSqlDbHost Aurora database endpoint i.e gluu.cluster-xxxxxxx.eu-central.rds.amazonaws.com empty config.configmap.cnSqlDbPort Aurora database port 3306 config.configmap.cnSqlDbName Aurora initial database name gluu config.configmap.cnSqlDbUser Aurora master user gluu config.configmap.cnSqldbUserPassword Aurora master password Test1234#","title":"Amazon Aurora"},{"location":"install/helm-install/amazon-eks/#install-gluu-using-helm","text":"Install nginx-ingress Helm Chart . kubectl create ns <nginx-namespace> helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx helm repo update # The below `set` is needed currently as the admission webhook of nginx upon initial installation sometimes revokes the ingress definitions incorrectly. helm install <nginx-release-name> ingress-nginx/ingress-nginx --namespace = <nginx-namespace> --set controller.admissionWebhooks.enabled = false Create a namespace for gluu openbanking distribution: kubectl create ns gluu 3. Modify other values in the helm chart configuration to fit your setup | Helm values configuration | Description | default | ---------------------------------|---------------------------------------|--------------------------|-----------------------------| | config.city | City | Austin | | config.countryCode | Country | US | | config.email | Email | support@gluu.org | | config.orgName | Organization name | Gluu | | config.state | State | TX | | global.fqdn | FQDN | demoexample.gluu.org | | nginx-ingress.ingress.hosts | A list containing the FQDN | [demoexample.gluu.org] | | nginx-ingress.ingress.tls.hosts | A list containing the FQDN | [demoexample.gluu.org] | Modify the values in the helm chart to activate using AWS Secret Manager as the config and secret layer holder. Change global.configAdapterName and global.configSecretAdapter to aws . Change the below values appropriately: | Helm values configuration | Description | default | ---------------------------------|---------------------------------------|--------------------------|-----------------------------| | config.configmap.cnAwsAccessKeyId | AWS Access key id that belong to a user/id with SecretsManagerReadWrite policy | \"\" | | config.configmap.cnAwsSecretAccessKey | AWS Secret Access key that belong to a user/id with SecretsManagerReadWrite policy | \"\" | | config.configmap.cnAwsSecretsEndpointUrl | The URL of AWS secretsmanager service (if omitted, will use the one in specified region). Used only when global.configAdapterName and global.configSecretAdapter is set to aws. | \"\" | | config.configmap.cnAwsSecretsEndpointUrl | The URL of AWS secretsmanager service (if omitted, will use the one in specified region). Used only when global.configAdapterName and global.configSecretAdapter is set to aws. | \"\" | | config.configmap.cnAwsSecretsNamePrefix | The prefix name of the secrets. Used only when global.configAdapterName and global.configSecretAdapter is set to aws. | \"gluu\" | | config.configmap.cnAwsDefaultRegion | The default AWS Region to use, for example, us-west-1 or us-west-2 . | us-west-1 | | config.configmap.cnAwsProfile | The name of the default profile to use. | gluu | | config.configmap.cnAwsSecretsReplicaRegions | Example replicated region [{\"Region\": \"us-west-1\"}, {\"Region\": \"us-west-2\"}] | [] | 5. NOT REEQUIRED IF FQDN IS REGISTERED : Please note that the FQDN must be resolvable or the config-api will fail to find the host. You may choose to modify the CoreDNS to reroute the domain internally to the nginx-ingress as following: Add rewrite rule to CoreDNS ConfigMap . In the following example we will be using ingress-nginx which you have installed previously. The internal address of this service will be nginx-ingress-nginx-controller.nginx.svc.cluster.local which is in the following format <releasename>-ingress-nginx-controller.<namespace>.svc.cluster.local and our example domain will be demoexample.gluu.org : Take a copy of the ConfigMap : kubectl -n kube-system get configmap coredns -o yaml > original_coredns_cm.yaml cp original_coredns_cm.yaml gluu_modified_coredns_cm.yaml Edit the ConfigMap to include the rewrite using any edition: vi gluu_modified_coredns_cm.yaml .:53 { .... rewrite name demoexample.gluu.org nginx-ingress-nginx-controller.nginx.svc.cluster.local } Apply the changes: kubectl apply -f gluu_modified_coredns_cm.yaml Install gluu flex, refer here for the latest version details: helm repo add gluu https://docs.gluu.org/charts helm repo update helm install <release-name> gluu/gluu -n <namespace> -f override-values.yaml --version = 5 .0.10 Wait for your pods to be up and running , head to https://<fqdn>/admin place your license creds and login.","title":"Install Gluu using Helm"},{"location":"install/helm-install/google-gke/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Google GKE"},{"location":"install/helm-install/google-gke/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/helm-install/local/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Local Kubernetes Cluster"},{"location":"install/helm-install/local/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/helm-install/microsoft-azure/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Microsoft Azure AKS"},{"location":"install/helm-install/microsoft-azure/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/helm-install/rancher/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Using Rancher Marketplace"},{"location":"install/helm-install/rancher/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/vm-install/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Index"},{"location":"install/vm-install/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/vm-install/dynamic-download/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates. This upcoming page is for Gluu Flex, an upcoming Gluu product. If you're looking for the Janssen Project installation page, find it here .","title":"Dynamic download"},{"location":"install/vm-install/dynamic-download/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates. This upcoming page is for Gluu Flex, an upcoming Gluu product. If you're looking for the Janssen Project installation page, find it here .","title":"Where is this content?"},{"location":"install/vm-install/rhel/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates. This content is for Gluu Flex, an upcoming Gluu product. If you're looking for the Gluu 4 installation page, find it here , and if you're looking for the Janssen Project installation page, find it here .","title":"RHEL"},{"location":"install/vm-install/rhel/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates. This content is for Gluu Flex, an upcoming Gluu product. If you're looking for the Gluu 4 installation page, find it here , and if you're looking for the Janssen Project installation page, find it here .","title":"Where is this content?"},{"location":"install/vm-install/setup/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Setup Script"},{"location":"install/vm-install/setup/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"install/vm-install/suse/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates. This content is for Gluu Flex, an upcoming Gluu product. If you're looking for the Gluu 4 installation page, find it here , and if you're looking for the Janssen Project installation page, find it here .","title":"Suse"},{"location":"install/vm-install/suse/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates. This content is for Gluu Flex, an upcoming Gluu product. If you're looking for the Gluu 4 installation page, find it here , and if you're looking for the Janssen Project installation page, find it here .","title":"Where is this content?"},{"location":"install/vm-install/ubuntu/","text":"Ubuntu Janssen Installation # Before you install, check the VM system requirements . Supported Versions # Ubuntu 20.04 Install the Package # Download the release package from the Github Gluu Flex Releases wget https://github.com/JanssenProject/jans/releases/download/v5.0.0-4/flex_5.0.0-4.ubuntu20.04_amd64.deb -P ~/ Verify integrity of the downloaded package by verifying published sha256sum . Download sha256sum file for the package wget https://github.com/JanssenProject/jans/releases/download/v5.0.0-4/flex_5.0.0-4.ubuntu20.04_amd64.deb.sha256sum -P ~/ Check the hash if it is matching. sha256sum -c flex_5.0.0-4.ubuntu20.04_amd64.deb.sha256sum Output similar to below should confirm the integrity of the downloaded package. <package-name>: OK Install the package apt install -y ~/flex_5.0.0-4.ubuntu20.04_amd64.deb Run the setup script # Run the setup script in interactive mode: python3 /opt/jans/flex/flex-linux-setup/flex_setup.py See more detailed instructions on the setup script if you're confused how to answer any of the questions, for details about command line arguments, or you would prefer to use a properties file instead of interactive mode. Ubuntu Janssen Un-Installation # Removing Janssen is a two step process: Delete files installed by Gluu Flex Remove and purge the jans package Use the command below to uninstall the Gluu Flex server python3 /opt/jans/flex/flex-linux-setup/flex_setup.py --remove-flex The command below removes and purges the jans package apt-get --purge remove jans","title":"Ubuntu"},{"location":"install/vm-install/ubuntu/#ubuntu-janssen-installation","text":"Before you install, check the VM system requirements .","title":"Ubuntu Janssen Installation"},{"location":"install/vm-install/ubuntu/#supported-versions","text":"Ubuntu 20.04","title":"Supported Versions"},{"location":"install/vm-install/ubuntu/#install-the-package","text":"Download the release package from the Github Gluu Flex Releases wget https://github.com/JanssenProject/jans/releases/download/v5.0.0-4/flex_5.0.0-4.ubuntu20.04_amd64.deb -P ~/ Verify integrity of the downloaded package by verifying published sha256sum . Download sha256sum file for the package wget https://github.com/JanssenProject/jans/releases/download/v5.0.0-4/flex_5.0.0-4.ubuntu20.04_amd64.deb.sha256sum -P ~/ Check the hash if it is matching. sha256sum -c flex_5.0.0-4.ubuntu20.04_amd64.deb.sha256sum Output similar to below should confirm the integrity of the downloaded package. <package-name>: OK Install the package apt install -y ~/flex_5.0.0-4.ubuntu20.04_amd64.deb","title":"Install the Package"},{"location":"install/vm-install/ubuntu/#run-the-setup-script","text":"Run the setup script in interactive mode: python3 /opt/jans/flex/flex-linux-setup/flex_setup.py See more detailed instructions on the setup script if you're confused how to answer any of the questions, for details about command line arguments, or you would prefer to use a properties file instead of interactive mode.","title":"Run the setup script"},{"location":"install/vm-install/ubuntu/#ubuntu-janssen-un-installation","text":"Removing Janssen is a two step process: Delete files installed by Gluu Flex Remove and purge the jans package Use the command below to uninstall the Gluu Flex server python3 /opt/jans/flex/flex-linux-setup/flex_setup.py --remove-flex The command below removes and purges the jans package apt-get --purge remove jans","title":"Ubuntu Janssen Un-Installation"},{"location":"install/vm-install/vm-requirements/","text":"VM System Requirements # Gluu Flex currently provides packages for these Linux distros: Ubuntu (versions: 20.04) SUSE (SLES or LEAP) (version: 15) RedHat Enterprise Linux (version: 8) Hardware Requirements # A single-VM deployment is where all services are running on one server. Although, the requirements can vary based on the size of the data and the required concurrency, the following guidelines can help you plan: Development and Test Environments # 4 GB RAM 2 CPU 20 GB Disk Production Environment Recommendation: # 8 GB RAM 4 CPU 4 GB swap space 50 GB Disk Port Configuration # Gluu Flex requires the following ports to be open for incoming connections. Port Protocol Notes 443 TCP TLS/HTTP You may want to use a redirect on port 80 to 443, although it is not required. Of course you will also need some way to login to your server, but that is out of scope of these docs. Check your server firewall documentation to configure your firewall to allow https . Hostname / IP Address Configuration # It is recommended that you use a static ip address for Gluu Flex. Your server should also return the hostname for the hostname command, it's recommended that you add the hostname to the /etc/hosts file. File Descriptor Configuration (FD) # Like most database and Internet servers, you must have at least 65k file descriptors. If you don't, your server will hang. First, check the current file descriptor limit using command below. If the existing FD limit exceeds 65535, then you're good. # cat /proc/sys/fs/file-max If FD limit is less than 65535 (e.g. 1024), then follow the steps below to increase the value. 1) Set soft and hard limits by adding the following lines in the /etc/security/limits.conf file * soft nofile 65535 * hard nofile 262144 2) Add the following lines to /etc/pam.d/login if not already present session required pam_limits.so 3) Increase the FD limit in /proc/sys/fs/file-max echo 65535 > /proc/sys/fs/file-max** 4) Use the ulimit command to set the FD limit to the hard limit specified in /etc/security/limits.conf . If setting to hard limit doesn't work, then try to set it to the soft limit. ulimit -n 262144 5) Restart the system","title":"VM Requirements"},{"location":"install/vm-install/vm-requirements/#vm-system-requirements","text":"Gluu Flex currently provides packages for these Linux distros: Ubuntu (versions: 20.04) SUSE (SLES or LEAP) (version: 15) RedHat Enterprise Linux (version: 8)","title":"VM System Requirements"},{"location":"install/vm-install/vm-requirements/#hardware-requirements","text":"A single-VM deployment is where all services are running on one server. Although, the requirements can vary based on the size of the data and the required concurrency, the following guidelines can help you plan:","title":"Hardware Requirements"},{"location":"install/vm-install/vm-requirements/#development-and-test-environments","text":"4 GB RAM 2 CPU 20 GB Disk","title":"Development and Test Environments"},{"location":"install/vm-install/vm-requirements/#production-environment-recommendation","text":"8 GB RAM 4 CPU 4 GB swap space 50 GB Disk","title":"Production Environment Recommendation:"},{"location":"install/vm-install/vm-requirements/#port-configuration","text":"Gluu Flex requires the following ports to be open for incoming connections. Port Protocol Notes 443 TCP TLS/HTTP You may want to use a redirect on port 80 to 443, although it is not required. Of course you will also need some way to login to your server, but that is out of scope of these docs. Check your server firewall documentation to configure your firewall to allow https .","title":"Port Configuration"},{"location":"install/vm-install/vm-requirements/#hostname-ip-address-configuration","text":"It is recommended that you use a static ip address for Gluu Flex. Your server should also return the hostname for the hostname command, it's recommended that you add the hostname to the /etc/hosts file.","title":"Hostname / IP Address Configuration"},{"location":"install/vm-install/vm-requirements/#file-descriptor-configuration-fd","text":"Like most database and Internet servers, you must have at least 65k file descriptors. If you don't, your server will hang. First, check the current file descriptor limit using command below. If the existing FD limit exceeds 65535, then you're good. # cat /proc/sys/fs/file-max If FD limit is less than 65535 (e.g. 1024), then follow the steps below to increase the value. 1) Set soft and hard limits by adding the following lines in the /etc/security/limits.conf file * soft nofile 65535 * hard nofile 262144 2) Add the following lines to /etc/pam.d/login if not already present session required pam_limits.so 3) Increase the FD limit in /proc/sys/fs/file-max echo 65535 > /proc/sys/fs/file-max** 4) Use the ulimit command to set the FD limit to the hard limit specified in /etc/security/limits.conf . If setting to hard limit doesn't work, then try to set it to the soft limit. ulimit -n 262144 5) Restart the system","title":"File Descriptor Configuration (FD)"},{"location":"saml/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Index"},{"location":"saml/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"saml/idp/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Idp"},{"location":"saml/idp/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"},{"location":"saml/proxy/","text":"Where is this content? # The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Proxy"},{"location":"saml/proxy/#where-is-this-content","text":"The Gluu Flex documentation is a work in progress, and this document is currently a draft. Keep an eye on this page for updates.","title":"Where is this content?"}]}